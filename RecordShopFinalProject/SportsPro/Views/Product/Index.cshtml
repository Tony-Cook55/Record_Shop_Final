
@model PaginatedList<ProductModel>


@{
    ViewData["Title"] = "Product Manager";
}





<div class="container">

    @* mmmmmmmmmmmmmmm TEMP DATA CRUD MESSAGE mmmmmmmmmmmmmmm *@
    @* Checks if there is a string in our Temp Data Message. If So Show the Message If not Nothing. This is so We don't see its padding and color *@
    @if (!string.IsNullOrEmpty(TempData["CRUDMessage"] as string))
    {
        <div class="error text-center         crud_message_slide_in" id="errorMessage">
            <div class="error__icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" height="24" fill="none"><path fill="#393a37" d="m13 13h-2v-6h2zm0 4h-2v-2h2zm-1-15c-1.3132 0-2.61358.25866-3.82683.7612-1.21326.50255-2.31565 1.23915-3.24424 2.16773-1.87536 1.87537-2.92893 4.41891-2.92893 7.07107 0 2.6522 1.05357 5.1957 2.92893 7.0711.92859.9286 2.03098 1.6651 3.24424 2.1677 1.21325.5025 2.51363.7612 3.82683.7612 2.6522 0 5.1957-1.0536 7.0711-2.9289 1.8753-1.8754 2.9289-4.4189 2.9289-7.0711 0-1.3132-.2587-2.61358-.7612-3.82683-.5026-1.21326-1.2391-2.31565-2.1677-3.24424-.9286-.92858-2.031-1.66518-3.2443-2.16773-1.2132-.50254-2.5136-.7612-3.8268-.7612z"></path></svg>
            </div>
            <div class="error__title">@(TempData["CRUDMessage"])</div>
            <div class="error__close" onclick="closeErrorMessage()">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" viewBox="0 0 20 20" height="20">
                    <path fill="#393a37" d="m15.8333 5.34166-1.175-1.175-4.6583 4.65834-4.65833-4.65834-1.175 1.175 4.65833 4.65834-4.65833 4.6583 1.175 1.175 4.65833-4.6583 4.6583 4.6583 1.175-1.175-4.6583-4.6583z"></path>
                </svg>
            </div>
        </div>
    }

    @* When a user clicks the X svg this triggers -> onclick="closeErrorMessage()" *@
    <script>
        // Closes the temp data message
        function closeErrorMessage() {
            var errorMessage = document.getElementById("errorMessage");
            errorMessage.classList.add("crud_message_slide_out"); // Add exit animation class

            setTimeout(function () {
                errorMessage.style.display = "none"; // Hide the error message after the animation completes
            }, 500); // Adjust timeout to match your animation duration
        }


        // Automatically close the error message after 8 seconds
        setTimeout(function () {
            closeErrorMessage();
        }, 8000); // 1000 milliseconds = 1 second
    </script>
    @* mmmmmmmmmmmmmmm TEMP DATA CRUD MESSAGE mmmmmmmmmmmmmmm *@








    @* SIDE MENU *@
    <header class="nav_header">
        <input id="side-menu-toggle" class="side-menu-toggle" type="checkbox" />
        <label for="side-menu-toggle">
            <svg class="icon--menu-toggle"  xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 20 20">
                <path fill="currentColor" d="m17.545 15.467l-3.779-3.779a6.15 6.15 0 0 0 .898-3.21c0-3.417-2.961-6.377-6.378-6.377A6.185 6.185 0 0 0 2.1 8.287c0 3.416 2.961 6.377 6.377 6.377a6.15 6.15 0 0 0 3.115-.844l3.799 3.801a.953.953 0 0 0 1.346 0l.943-.943c.371-.371.236-.84-.135-1.211M4.004 8.287a4.282 4.282 0 0 1 4.282-4.283c2.366 0 4.474 2.107 4.474 4.474a4.284 4.284 0 0 1-4.283 4.283c-2.366-.001-4.473-2.109-4.473-4.474">
                </path>
            </svg>
        </label>
        <nav class="side-menu container-fluid">

            <h1 class="text-center    search_side_menu_title">Search Products</h1>

            @* SEARCHBAR SEARCHING USING RECORD NAME & ARTISTS NAME *@
                <div class="search">
                    <form asp-controller="Product" asp-action="Index" method="get" class="search-form">

                        <input type="text" class="search_bar_text_input" placeholder="Search Artists or Records" name="searchString">
                        <input type="submit" class="search_bar_submit_input" value="Submit">
                    </form>
                </div>
            @* SEARCHBAR SEARCHING USING RECORD NAME & ARTISTS NAME *@


            @* FILTERING BY ARTIST NAME*@
            <div class="scrollable_search_buttons   text-center">
                <a asp-controller="Product" asp-action="Index" asp-route-artist="all"   class="pushable text-center  m-3">
                    <span class="shadow"></span>
                    <span class="edge"></span>
                    <span class="front">
                        <span class="">All</span>
                    </span>
                </a>
                @foreach (var artistName in ViewBag.ArtistNames)
                {
                    <button class="pushable">
                        <a asp-controller="Product" asp-action="Index" asp-route-artist="@artistName" class="pushable text-center  m-3">
                                <span class="shadow"></span>
                                <span class="edge"></span>
                                <span class="front">
                                    <span>@artistName</span>
                                </span>
                        </a>
                    </button>
                }
            </div>
            @* FILTERING BY ARTIST NAME*@

        </nav>

    </header>
    @* SIDE MENU *@










    @* IF THE SEARCH STRING INPUTTED BY USER IS INVALID SHOW NO RECORDS*@
    @if (Model.Count == 0)
    {
        <section class="hero_section   text-center    scale_in_center_entrance_animation">
            <div class="hero_content   text-center ">
                <div class="">
                    @* hero_content_record_stopper_box *@
                    <h1 class="hero_header__no_items_text">No Records Found</h1>

                    <a asp-controller="Product" asp-action="Index" asp-route-artist="all"   class="no_items_image ">
                        <img src="~/images/icons/no_results_sad.png" class="no_results_img" draggable="false" >
                    </a>
                </div>
            </div>
        </section>
    }
    else
    {
        <div class="   text-center   ">

            <h1 class="page_header_text text-center">
                Records
            </h1>

            <div class="container  card_expand_container">
                @foreach (var product in Model)
                {
                    <div class="card      scale_in_center_entrance_animation">
                        <div class="card_expand_face card_face_top">
                            <div class="content">
                                <h1 class="face_header_text">@product.RecordName</h1>
                                <h4 class="face_text">@product.ArtistName</h4>
                                <h4 class="face_text">@product.ReleaseDate</h4>
                            </div>
                        </div>
                        <div class="card_expand_face card_face_bottom_info">
                            <div class="content">
                                <p>@product.Code</p>
                                <p>@product.Genre.GenreName</p>
                                <p>@product.Price?.ToString("C")</p>


                                <a class="btn card_expand_link card_edit_button" asp-controller="Product" asp-action="EditProduct" asp-route-id="@product.ProductModelId" asp-route-slug="@product.Slug"><i class="fa-solid fa-pencil"></i></a>
                                <a class="btn card_expand_link card_delete_button" asp-controller="Product" asp-action="DeleteProduct" asp-route-id="@product.ProductModelId" asp-route-slug="@product.Slug"><i class="fa-solid fa-trash-can"></i></a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>



        <div class="text-center mb-5">

            <button class="crud_button     crud_button_add">
                <span class="crud_button_text">Add</span>
                <span class="crud_button_icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z" /></svg>
                </span>
            </button>



            <button class="crud_button     crud_button_edit">
                <span class="crud_button_text">Edit</span>
                <span class="crud_button_icon">
                    <svg fill="#000000" height="800px" width="800px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                         viewBox="0 0 512 512" enable-background="new 0 0 512 512" xml:space="preserve">
                    <path d="M70.2,337.4l104.4,104.4L441.5,175L337,70.5L70.2,337.4z M0.6,499.8c-2.3,9.3,2.3,13.9,11.6,11.6L151.4,465L47,360.6
	                    L0.6,499.8z M487.9,24.1c-46.3-46.4-92.8-11.6-92.8-11.6c-7.6,5.8-34.8,34.8-34.8,34.8l104.4,104.4c0,0,28.9-27.2,34.8-34.8
	                    C499.5,116.9,534.3,70.6,487.9,24.1z" />
                        </svg>
                </span>
            </button>

            <button class="crud_button     crud_button_delete">
                <span class="crud_button_text">Delete</span>
                <span class="crud_button_icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path>
                    </svg>
                </span>
            </button>

            <a asp-controller="Product" asp-action="Add" class="btn btn-outline-primary">Add New Record</a>
        </div>






        @* PAGEINATION *@
    @*     @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        } *@

        <div class="d-flex justify-content-center">
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-secondary @(Model.HasPreviousPage ? "" : "disabled")">Previous</a>
            <div class="btn" style="cursor: default">Page @Model.PageIndex of @Model.TotalPages</div>
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-secondary @(Model.HasNextPage ? "" : "disabled")">Next</a>
        </div>
        @* PAGEINATION *@

    }
</div>